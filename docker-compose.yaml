version: "3.8"
services:
  table-db:
    image: mongo:latest
    container_name: table-db
    restart: always
    networks:
      - orquestrator-services
    environment:
      - MONGO_INITDB_ROOT_USERNAME =tables
      - MONGO_INITDB_ROOT_PASSWORD =123456
    ports:
      - 27017:27017

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    networks:
      - orquestrator-services
    environment:
      - POSTGRES_DB=postgres-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=2503
    ports:
      - 5432:5432

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    networks:
      - orquestrator-services

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - kafka
    networks:
      - orquestrator-services

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    depends_on:
      - zookeeper
    networks:
      - orquestrator-services

networks:
  orquestrator-services:
    driver: bridge
